<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Appli">
	<!-- 한명의 구매자가 서비스를 신청한 건수 -->
	<select id="getAppliListCount" resultType="int" parameterType="java.lang.String">
		SELECT COUNT(*)
		FROM CRD_SERV_APP
		WHERE CUSTOMER_ID = #{customerid}
		AND PROGRESS_CODE IN (  'STU0010001'
								, 'STU0010002'
								, 'STU0010003'
								, 'STU0010004'
		)
	</select>
	
	<!-- 한명의 구매자가 서비스를 조회하면 보여줄 기본정보 -->
	<select id="getAppliList" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT
			D.ADDRESS, D.APP_DATE, SUGG_CNT, D.SERV_ID, D.PER_BUD, D.SERV_DATE, PROGRESS_CODE
		FROM (
				SELECT
					C.*, ROWNUM AS NUM
				FROM (
						SELECT ADDRESS, TO_CHAR(APP_DATE ,'YYYY-MM-DD HH24:MI:SS' ) APP_DATE
							, (	SELECT COUNT(SUGG_ID) FROM CRD_SERV_SUGG B WHERE B.SERV_ID = A.SERV_ID) AS SUGG_CNT
							, SERV_ID, PER_BUD, TO_CHAR(SERV_DATE ,'YYYY-MM-DD HH24:MI:SS' ) SERV_DATE
							, PROGRESS_CODE
						FROM CRD_SERV_APP A
						WHERE CUSTOMER_ID = #{memId}
							AND PROGRESS_CODE IN (  'STU0010001'
								, 'STU0010002'
								, 'STU0010003'
								, 'STU0010004'
							)
						ORDER BY APP_DATE DESC
				) C
		) D
		WHERE 
			NUM BETWEEN #{startNum} AND #{endNum}
		
	</select>
	
	<!-- 한명의 구매자가 서비스를 조회하면 보여줄 상세정보 -->
	<!-- (M.NAME, SERV_DATE, APP_DATE, MODIFIED_DATE, END_DATE, A.*)-->
	<select id="getAppliInfo" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT M.NAME
		,TO_CHAR(A.SERV_DATE,'YYYY-MM-DD HH24:MI:SS') AS SERV_DATE
		,TO_CHAR(A.APP_DATE,'YYYY-MM-DD HH24:MI:SS') AS APP_DATE
		,TO_CHAR(A.MODIFIED_DATE,'YYYY-MM-DD HH24:MI:SS') AS MODIFIED_DATE
		,TO_CHAR(A.END_DATE,'YYYY-MM-DD HH24:MI:SS') AS END_DATE
		,A.* 
		FROM CRD_SERV_APP A, CRD_MEM M
		WHERE A.CUSTOMER_ID = M.MEM_ID
		AND SERV_ID = #{appliId}
	</select>
	
	
	<select id="getMenuInfo" parameterType="String" resultType="java.util.Map">
		select SUGG_ID, MENU_SEQ, NAME, WEIGHT, EXPLANATION, FILE_ID
		from crd_serv_sugg_menu 
		where sugg_id = #{suggId}
	</select>
	
	
	
	
	<!-- 매 신청건마다 제안이 들어온 판매자별 모든정보 -->
	<select id="getSuggInfo" parameterType="java.lang.String" resultType="java.util.Map">
		select distinct 
			s.sugg_id, s.serv_id, s.per_bud, TO_CHAR(s.sugg_date,'YYYY-MM-DD HH24:MI:SS') as sugg_date
			, c.explanation c_explan, c.maximum_seating, c.name
		from 
			crd_serv_sugg s, crd_company c
		where 
			s.mem_id = c.mem_id
			and s.serv_id = #{appliId}
	</select>
	<!-- 1.구매자가 제안을 수락한 건의 처리(crd_serv_sugg, crd_serv_app 상태값 변경) -->
	<update id="setSuggState" parameterType="java.lang.String">
		update crd_serv_sugg set choose_yn = 'Y'
		, choose_date = sysdate
		where sugg_id = #{suggId}
	</update>
	<update id="setSuggFail" parameterType="java.util.Map">
		update crd_serv_sugg set choose_yn = 'N'
		, choose_date = sysdate
		 where SERV_ID = #{servId}
		and sugg_id != #{suggId}
	</update>
	<update id="setAppState" parameterType="java.lang.String">
		update crd_serv_app aa set progress_code = 'STU0030001'
		where aa.serv_id = (select serv_id from crd_serv_sugg where sugg_id = #{suggId})
	</update>
	<!-- 2.구매자가 제안을 수락한 건의 처리(crd_serv_pay row 추가) -->
	<insert id="addPayRow" parameterType="java.util.Map">
		INSERT INTO crd_serv_pay
			(serv_id, status, amount, vat, supply_payment, pay_date, method, ratio)
		VALUES (
			#{servId}, 'N', #{total}, 10, 0, null, null, 5
		)
	</insert>
	<!--  판매자의 서비스평점을 일단위 기간으로 조회 -->
	<select id="getReviewAvgScore" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT avg(menu_score) menu, avg(price_score) price, avg(serv_score) serv
		FROM crd_serv_review re
		JOIN (
			SELECT app.serv_id id, app.progress_code code, sug.mem_id ppp, app.customer_id ggg
			FROM crd_serv_app app
			JOIN crd_serv_sugg sug
			ON app.serv_id = sug.serv_id
			WHERE sug.mem_id=(
				SELECT sug.mem_id
				FROM crd_serv_sugg sug
				WHERE sug.sugg_id=#{suggid}'
				)
			AND app.progress_code ='STU0060001'
		) endlist
		ON re.serv_id = endlist.id
		WHERE review_date > sysdate - #{daterange}
	</select>
</mapper>
