<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Review">
  <insert id="insertReview" parameterType="com.charida.app.review.dto.ReviewDto">
  	INSERT INTO CRD_SERV_REVIEW (SERV_ID, REVIEW_DATE, SERV_ROOT, MENU_SCORE, PRICE_SCORE, 
  								SERV_SCORE, RECOMMAND, TITLE, CONTENT, FILE_YN, BLIND_YN)
  	VALUES(#{serv_id}, SYSDATE, #{serv_root}, #{menu_score}, #{price_score}, 
  			#{serv_score}, #{recommand}, #{title}, #{content}, NULL, 'N')
  </insert>
  <select id="getReviews" resultType="com.charida.app.review.dto.ReviewDto">
  	SELECT 
  	SERV_ID, 
  	REVIEW_DATE, 
  	SERV_ROOT, 
  	MENU_SCORE, 
  	PRICE_SCORE, 
  	SERV_SCORE, 
  	RECOMMAND, 
  	TITLE, 
  	CONTENT 
  	FROM CRD_SERV_REVIEW
  </select>
  
  <select id="ownReview" parameterType="String" resultType="com.charida.app.review.dto.ReviewDto">
	SELECT 
	  	A.SERV_ID, 
	  	A.REVIEW_DATE, 
	  	A.SERV_ROOT, 
	  	A.MENU_SCORE, 
	  	A.PRICE_SCORE, 
	  	A.SERV_SCORE, 
	  	A.RECOMMAND, 
	  	A.TITLE, 
	  	A.CONTENT 
	  	FROM CRD_SERV_REVIEW A INNER JOIN CRD_SERV_APP B
	ON A.SERV_ID = B.SERV_ID
	AND B.CUSTOMER_ID = #{id}
  </select>
  
  <select id="ableToReview" resultType="com.charida.app.matching.dto.MatchingDto">
	SELECT 	
	A.SERV_ID, 
	A.CUSTOMER_ID,
	A.ZIPCODE,
	A.ADDRESS,
	A.ADDRESS_DETAIL,
	A.PARTICIPANT,
	A.AGE_MIN,
	A.AGE_MAX,
	A.PER_MEN,
	A.SERV_TYPE_CODE,
	A.EVENT_TYPE_CODE,
	A.DESSERT_YN,
	A.PER_BUD,
	A.SERV_DATE,	
	A.APP_DATE,
	A.INTERIOR_YN,
	A.COOKING_YN,
	A.DISCHARGE_YN,
	A.ELEVATOR_YN,
	A.PARKING_YN,
	A.TABLEWARE_YN,
	A.COORDINATOR_YN,
	A.OTHER_ORDER_YN,
	A.REQUESTED_TERM
	FROM CRD_SERV_APP A INNER JOIN CRD_SERV_SUGG S
	ON S.CHOOSE_YN='Y' 
	AND A.SERV_ID = S.SERV_ID 
	AND NOT EXISTS (SELECT 1 FROM CRD_SERV_REVIEW B WHERE A.SERV_ID = B.SERV_ID )
  </select>
  <select id="modifyReview" parameterType="java.lang.String" resultType="com.charida.app.matching.dto.MatchingDto">
  	SELECT 
	  	SERV_ID, 
	  	REVIEW_DATE, 
	  	SERV_ROOT, 
	  	MENU_SCORE, 
	  	PRICE_SCORE, 
	  	SERV_SCORE, 
	  	RECOMMAND, 
	  	TITLE, 
	  	CONTENT
  	FROM CRD_SERV_REVIEW
  	WHERE SERV_ID = #{serv_id}
  </select>
  <delete id="deleteReview" parameterType="String">
  	DELETE FROM CRD_SERV_REVIEW WHERE SERV_ID = #{serv_id}
  </delete> 
  <update id="modifyReviewPro" parameterType="com.charida.app.review.dto.ReviewDto">
	UPDATE CRD_SERV_REVIEW SET 
		SERV_ROOT = #{serv_root},
		MENU_SCORE = #{menu_score},
		PRICE_SCORE = #{price_score},
		SERV_SCORE = #{serv_score},
		RECOMMAND = #{recommand},
		TITLE = #{title},
		CONTENT = #{content}
	WHERE SERV_ID = #{serv_id}
  </update>
  <select id="getServ_id" resultType="String">
  	SELECT A.SERV_ID 
  	FROM CRD_SERV_APP A INNER JOIN CRD_SERV_SUGG S
	ON S.CHOOSE_YN='Y' 
	AND A.SERV_ID = S.SERV_ID 
	AND NOT EXISTS (SELECT 1 FROM CRD_SERV_REVIEW B WHERE A.SERV_ID = B.SERV_ID )
  </select>
  
</mapper>